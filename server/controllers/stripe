
//STRIPE SECRET KEY
const stripe = require('stripe')("sk_test_51ILXLOImdHoREZzeCeqmjDi7zI0vWIT3WzYGh9DV9RFT3lebYQ1FkOb0oFjwreviwQjok8kZqvFc2FbcJJDClAYO00imWDSt3p");

//STRIPE INITIALIZATION
exports.configuration= async (req, res) => {
 // writeLOG( '********************************** customer configuration ***************************** ' )
 // writeLOG( ' ## 0: CONFIG STRIPE ## ' )
//   console.log("price---"+process.env.PRICE);
  const price = await stripe.prices.retrieve("price_1ImJtVImdHoREZzewUg6hhOK");
  res.send({
    publicKey: process.env.STRIPE_PUBLISHABLE_KEY,
    unitAmount: price.unit_amount,
    currency: price.currency,
  });
};

// Fetch the Checkout Session to display the JSON result on the success page
exports.checkoutSession=async (req, res) => {
  const { sessionId } = req.query;
  const session = await stripe.checkout.sessions.retrieve(sessionId);
  writeLOG( ' ## 2: checkout-session SESSION ID: ## '+session.id+' ##' )
  writeLOG( ' ***************************************************************************************** ' )

  res.send(session);
};

//CREATE CHECKOUT SESSION
exports.createCheckoutSession = async (req, res) => {
  //-----------------------------------------------------------------------
  console.log("create checkout session")
  const domainURL = process.env.DOMAIN;
  const { quantity, locale } = req.body;
  // The list of supported payment method types. We fetch this from the
  // environment variables in this sample. In practice, users often hard code a
  // list of strings for the payment method types they plan to support.
  const pmTypes = (process.env.PAYMENT_METHOD_TYPES || 'card').split(',').map((m) => m.trim());
  // Create new Checkout Session for the order
  // Other optional params include:
  // [billing_address_collection] - to display billing address details on the page
  // [customer] - if you have an existing Stripe Customer ID
  // [customer_email] - lets you prefill the email input in the Checkout page
  // For full details see https://stripe.com/docs/api/checkout/sessions/create
  const session = await stripe.checkout.sessions.create({
    payment_method_types: pmTypes,
    mode: 'payment',
    locale: locale,
    line_items: [
      {
        price: "price_1ImJtVImdHoREZzewUg6hhOK",
        quantity: 1
      },
    ],
    // ?session_id={CHECKOUT_SESSION_ID} means the redirect will have the session ID set as a query param
   // success_url: `${domainURL}/success.html`,
    success_url: `http://localhost:8080`,
    cancel_url: `http://localhost:8080`,
  });
  console.log("CREATE CHECKOUT SESSION@@@@@@@@@@@@ " );
  // logger.end()
   
   res.send({
     sessionId: session.id,
   });
};

/* 
EXAMPLE TESTT
exports.stripeTest=async (req,res)=> {
  res.json("stripe testt OKKKK");
  
  const product = new Product({
      name:req.body.name,
      description:req.body.description,
      category:req.body.category,
      quantity:req.body.quantity
    });
       // console.log(req);
    await product.save()
    .then(function(product) {
      // If we were able to successfully create a Product, send it back to the client
      res.json(product);
    })
    .catch(function(err) {
      // If an error occurred, send it to the client
      res.json(err);
    });
};*/

